
package Zoo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import com.mysql.cj.jdbc.Driver;
import java.sql.PreparedStatement;
import java.sql.Statement;

import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import javax.swing.JOptionPane;


public class habitat extends javax.swing.JInternalFrame {
    
    DefaultTableModel modelo = new DefaultTableModel();
    Statement ejecutor=null;
    Connection con;
    String driver= "com.mysql.jdbc.Driver";
    String user="root";
    String pass="";
    String url="jdbc:mysql://localhost:3307/zoo";
    
    protected void cargaTabla(){
        
        modelo.setRowCount(0);
        String datos[]=new String[5];
        String query="select * from habitat";
        ResultSet rs;
        try{
           ejecutor=con.createStatement();
           ejecutor.setQueryTimeout(20);
           rs= ejecutor.executeQuery(query);
           while(rs.next()==true){
               datos[0] = rs.getString("identificacion animal");
               datos[1] = rs.getString("animal");
               datos[2] = rs.getString("edad");
               datos[3] = rs.getString("celda");
               datos[4] = rs.getString("mantenimiento");
               modelo.addRow(datos);
           }
           tablaHabitat.setModel(modelo);
        }catch(Exception e){
            
        }
    }
    protected void buscarTabla(String animal, String celda, String mantenimiento){
        modelo.setRowCount(0);
        String datos[]=new String[5];
        String where=" where 1=1";
        if(animal.isEmpty()==false){
            where=where+" and animal='"+animal+"' ";
        }
        if(celda.isEmpty()==false){
            where=where+" and celda='"+celda+"' ";
        }
        if(mantenimiento.isEmpty()==false){
            where=where+" and mantenimiento='"+mantenimiento+"' ";
        }
        String query="select * from habitat "+where+" ;";
        ResultSet rs;
        try{
           ejecutor=con.createStatement();
           ejecutor.setQueryTimeout(20);
           rs= ejecutor.executeQuery(query);
           while(rs.next()==true){
               datos[0] = rs.getString("identificacion animal");
               datos[1] = rs.getString("animal");
               datos[2] = rs.getString("edad");
               datos[3] = rs.getString("celda");
               datos[4] = rs.getString("mantenimiento");
               modelo.addRow(datos);
           }
           tablaHabitat.setModel(modelo);
        }catch(Exception e){
            
        }
        
    }
    public void conectar(){
        con=null;
        try{
           Class.forName(driver);
           con=(Connection) DriverManager.getConnection(url, user, pass);
           if(con!=null){
               lblEstadoCon.setText("Conexion exitosa");
           }
        }catch(Exception e){
            lblEstadoCon.setText("Conexion NO exitosa "+e);
        }
    }
            
    /**
     * Creates new form habitat
     */
    public habitat() {
        initComponents();
        modelo.addColumn("identificacion animal");
        modelo.addColumn("animal");
        modelo.addColumn("edad");
        modelo.addColumn("celda");
        modelo.addColumn("mantenimiento");
        conectar();
        cargaTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEstadoCon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHabitat = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        porAnimal = new javax.swing.JTextField();
        porCelda = new javax.swing.JTextField();
        porMantenimiento = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtIdentificacionAnimal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAnimal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCelda = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMantenimiento = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Informacion Habitat");

        tablaHabitat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(tablaHabitat);

        jLabel1.setText("Por animal");

        jLabel2.setText("Por celda");

        jLabel3.setText("Por mantenimiento");

        porAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porAnimalActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel4.setText("Identificacion animal");

        jLabel5.setText("Animal");

        jLabel6.setText("edad");

        jLabel7.setText("celda");

        jLabel8.setText("mantenimiento");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtIdentificacionAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEstadoCon, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(porAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(porCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(porMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar))
                            .addComponent(jLabel3))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEstadoCon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtIdentificacionAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnAgregar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtCelda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porCelda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(porMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void porAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porAnimalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porAnimalActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarTabla(porAnimal.getText(), porCelda.getText(), porMantenimiento.getText());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        agregar();
    }//GEN-LAST:event_btnAgregarActionPerformed
    protected void agregar(){
        String mensajeError="";
        String query="";
        PreparedStatement preparar=null;
        if(txtIdentificacionAnimal.getText().isEmpty()==true){
            mensajeError=mensajeError+" Este campo no puede estar vacio";
        }
        else if(txtAnimal.getText().isEmpty()==true){
            mensajeError=mensajeError+" Este campo no puede estar vacio";
        }
        else if(txtEdad.getText().isEmpty()==true){
            mensajeError=mensajeError+" Este campo no puede estar vacio";
        }
        else if (txtCelda.getText().isEmpty()==true){
            mensajeError=mensajeError+" Este campo no puede estar vacio";
        }
        else if(txtMantenimiento.getText().isEmpty()==true){
            mensajeError=mensajeError+" Este campo no puede estar vacio";
        }
        if(mensajeError.isEmpty()==true){
            
            query ="insert into habitat (identificacion animal, animal, edad, celda, mantenimiento) values('"+txtIdentificacionAnimal.getText()+"','"+txtAnimal.getText()+"','"+txtEdad.getText()+"','"+txtCelda.getText()+"','"+txtMantenimiento.getText()+"')";
            try{
               preparar=con.prepareStatement(query); 
               preparar.executeUpdate();
               cargaTabla();
            }catch(Exception e){
                
            }
        }else{
            JOptionPane.showMessageDialog(null, mensajeError);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEstadoCon;
    private javax.swing.JTextField porAnimal;
    private javax.swing.JTextField porCelda;
    private javax.swing.JTextField porMantenimiento;
    private javax.swing.JTable tablaHabitat;
    private javax.swing.JTextField txtAnimal;
    private javax.swing.JTextField txtCelda;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtIdentificacionAnimal;
    private javax.swing.JTextField txtMantenimiento;
    // End of variables declaration//GEN-END:variables
}
